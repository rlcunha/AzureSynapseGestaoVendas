{
	"name": "nb_prepare_trusted_clientes",
	"properties": {
		"folder": {
			"name": "GestaoVendas/raw"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "GestaoPoolSpark",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "3b5d726a-279c-4e0c-94c4-eaf09b47f27c"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/e63e4e78-7bcc-4a13-b746-41dc90a24486/resourceGroups/rg-mibitech/providers/Microsoft.Synapse/workspaces/wkssyngestao/bigDataPools/GestaoPoolSpark",
				"name": "GestaoPoolSpark",
				"type": "Spark",
				"endpoint": "https://wkssyngestao.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/GestaoPoolSpark",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 10,
				"cores": 8,
				"memory": 56,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%run GestaoVendas/base/import/nb_import_base"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%run GestaoVendas/base/parameter/nb_parameter_base"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%run GestaoVendas/raw/nb_config_raw"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"**BIBLIOTECAS IMPORTADAS DE USO LOCAL**"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import shutil\r\n",
					"import codecs\r\n",
					"from datetime import datetime\r\n",
					"\r\n",
					"import pandas as pd\r\n",
					"\r\n",
					"from pyspark.sql import *\r\n",
					"from pyspark.sql.types import *\r\n",
					"import pyspark.sql.functions as f"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"**PARAMETROS LOCAIS**"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"#Clientes\r\n",
					"file_path_read_clientes = '/pdv/Clientes/dtIngestao='+p_dt_ingestion[:6]+\"**\"\r\n",
					"file_path_write_clientes = '/clientes/ANO='+substr(p_dt_ingestion,1,4)+'/MES='+substr(p_dt_ingestion,5,2)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"**LER DADOS EM FORMATO PARQUET**"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"parquet_path = adls_path + file_path_read_clientes\r\n",
					"df_clientes = spark.read.parquet(parquet_path,header=\"false\",inferSchema=False) \r\n",
					"df_clientes.cache()"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"**FORMATA OS DADOS LIDOS DA ORIGEM**"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df_clientes = df_clientes.select(df_clientes.Prop_0.cast(\"integer\").alias('CODIGO'),\\\r\n",
					"                        df_clientes.Prop_1.cast(\"string\").alias('NOME'),\\\r\n",
					"                        df_clientes.Prop_2.cast(\"string\").alias('TELEFONE'),\\\r\n",
					"                        df_clientes.Prop_3.cast(\"string\").alias('EMAIL'),\\\r\n",
					"                        df_clientes.Prop_4.cast(\"string\").alias('NASCIMENTO'),\\\r\n",
					"                        df_clientes.Prop_5.cast(\"string\").alias('ANIVERSARIANTE'),\\\r\n",
					"                        df_clientes.Prop_6.cast(\"integer\").alias('IDADE'),\\\r\n",
					"                        df_clientes.Prop_7.cast(\"string\").alias('SEXO'),\\\r\n",
					"                        df_clientes.Prop_8.cast(\"string\").alias('ORIGEM'),\\\r\n",
					"                        df_clientes.Prop_9.cast(\"string\").alias('CADASTRO'),\\\r\n",
					"                        df_clientes.Prop_10.cast(\"string\").alias('UNIDADE')).withColumn('DATAINGESTAO', f.lit(dtIngestion))\r\n",
					"print(f'Clientes Formatados : {df_clientes.count()}')"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"**LIMPAR OS DADOS IMPORTADOS**"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# # Ler e filtrar e gravar dataframe - Cliente\r\n",
					"# df_clientes = df_clientes.dropna(how='all', subset='CODIGO')\r\n",
					"# # df_clientes = df_clientes.dropna(how='all', subset='IDADE')\r\n",
					"# print(f'Clientes Higienizado : {df_clientes.count()}')"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"**GRAVAR OS DADOS NA TRUSTED**"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"adls_path_write = 'abfss://%s@%s.dfs.core.windows.net' % ('trusted', account_name)\r\n",
					"#df_q_lctctb_01 = spark.range(5,10) \r\n",
					"df_clientes.repartition(1).write.format(\"parquet\").mode(\"overwrite\").save(adls_path_write + file_path_write_clientes)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"mssparkutils.notebook.exit(adls_path_write + file_path_write_clientes)"
				],
				"execution_count": null
			}
		]
	}
}